{"ast":null,"code":"var _jsxFileName = \"/Users/akhand/Developer/power-search/quickstart-react/src/views/OptionSelection.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tag, Empty, Button, Row, Col, Result, Divider, Card, Avatar, Image } from 'antd';\nimport { DoubleRightOutlined, CompassTwoTone, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport mondaySdk from \"monday-sdk-js\";\nconst {\n  Meta\n} = Card;\nconst monday = mondaySdk();\n\nconst OptionSelection = () => {\n  const [isSaved, setIsSaved] = useState(false);\n  const [savedSearches, setSavedSearches] = useState([]);\n  const [isMounted, setIsMounted] = useState([]);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  async function loadSavedItems() {\n    let resp = await monday.storage.instance.getItem('boop');\n\n    if (!resp || !resp.data) {\n      return;\n    } else {\n      if (resp.data.value !== null) {\n        let saved = resp.data.value;\n        setSavedSearches(JSON.parse(saved));\n      }\n    }\n  }\n\n  async function deleteSavedItem(idx) {\n    // console.log(e.value)\n    let saved = [...savedSearches]; // console.log(idx)\n\n    saved.splice(idx, 1);\n    let resp = await monday.storage.instance.setItem('boop', JSON.stringify(saved));\n    setSavedSearches(saved); // console.log(savedSearches)\n\n    if (saved.length === 0) {\n      setIsSaved(false);\n    }\n  }\n\n  useEffect(() => {\n    if (isMounted) {\n      // console.log(savedSearches)\n      if (savedSearches.length === 0) {\n        setIsSaved(false);\n      } else {\n        setIsSaved(true);\n      }\n    }\n  }, [savedSearches]);\n  useEffect(() => {\n    if (isMounted) {// console.log(isSaved)\n    }\n  }, [isSaved]);\n  useEffect(() => {\n    if (isMounted) {\n      // console.log(savedSearches)\n      // Do nothing\n      setIsDataLoading(true); // Fetch previously saved data\n\n      loadSavedItems(); // console.log(savedSearches)\n\n      setIsDataLoading(false);\n    }\n  }, [isMounted]);\n  useEffect(() => {\n    if (isMounted) {// console.log(savedSearches)\n      // Do nothing\n    }\n  }, [isDataLoading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-statistic-demo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Result, {\n    icon: /*#__PURE__*/React.createElement(Image, {\n      width: 10,\n      src: \"../../logo.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }\n    }),\n    title: \"Let's begin with Super Search\",\n    subTitle: \"or you can choose to run a search from the past...\",\n    extra: [\n    /*#__PURE__*/\n    // <Link to=\"/search\" key=\"0\">\n    React.createElement(Link, {\n      to: {\n        pathname: '/search',\n        state: {\n          question: \"\",\n          searchType: \"\",\n          searchGroups: [\"All Groups\"],\n          searchColumns: [\"All Columns\"]\n        }\n      },\n      key: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      key: \"console\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"Go to Super Search\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/view/history\",\n      key: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      key: \"history\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"View Search History\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Saved Searches\")), isSaved ? /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, savedSearches.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    actions: [\n    /*#__PURE__*/\n    // <PlayCircleTwoTone />,\n    React.createElement(Link, {\n      to: {\n        pathname: '/search',\n        state: {\n          question: item.query,\n          searchType: item.type,\n          searchGroups: item.groups,\n          searchColumns: item.columns\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      icon: /*#__PURE__*/React.createElement(DoubleRightOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 63\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 59\n        }\n      }),\n      onClick: async () => await deleteSavedItem(),\n      value: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      style: {\n        backgroundColor: \"#eb4034\"\n      },\n      icon: /*#__PURE__*/React.createElement(CompassTwoTone, {\n        twoToneColor: \"#eb4034\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 92\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }),\n    title: item.query,\n    description: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, item.groups.map(item => /*#__PURE__*/React.createElement(Tag, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 45\n      }\n    }, item)), item.columns.map(item => /*#__PURE__*/React.createElement(Tag, {\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 45\n      }\n    }, item)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, item.type)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }))))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, \"Saved searches appear here...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 37\n    }\n  })))))));\n};\n\nexport default OptionSelection;","map":{"version":3,"sources":["/Users/akhand/Developer/power-search/quickstart-react/src/views/OptionSelection.js"],"names":["React","useState","useEffect","Link","Tag","Empty","Button","Row","Col","Result","Divider","Card","Avatar","Image","DoubleRightOutlined","CompassTwoTone","DeleteOutlined","SearchOutlined","mondaySdk","Meta","monday","OptionSelection","isSaved","setIsSaved","savedSearches","setSavedSearches","isMounted","setIsMounted","isDataLoading","setIsDataLoading","loadSavedItems","resp","storage","instance","getItem","data","value","saved","JSON","parse","deleteSavedItem","idx","splice","setItem","stringify","length","pathname","state","question","searchType","searchGroups","searchColumns","map","item","query","type","groups","columns","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+CC,OAA/C,EAAwDC,IAAxD,EAA8DC,MAA9D,EAAsEC,KAAtE,QAAmF,MAAnF;AACA,SAASC,mBAAT,EAA8BC,cAA9B,EAA8CC,cAA9C,EAA8DC,cAA9D,QAAoF,mBAApF;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWR,IAAjB;AAEA,MAAMS,MAAM,GAAGF,SAAS,EAAxB;;AAEA,MAAMG,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeG,cAAf,GAA+B;AAC3B,QAAIC,IAAI,GAAG,MAAMX,MAAM,CAACY,OAAP,CAAeC,QAAf,CAAwBC,OAAxB,CAAgC,MAAhC,CAAjB;;AACA,QAAG,CAACH,IAAD,IAAS,CAACA,IAAI,CAACI,IAAlB,EAAuB;AACnB;AACH,KAFD,MAEO;AACH,UAAGJ,IAAI,CAACI,IAAL,CAAUC,KAAV,KAAoB,IAAvB,EAA4B;AACxB,YAAIC,KAAK,GAAGN,IAAI,CAACI,IAAL,CAAUC,KAAtB;AACAX,QAAAA,gBAAgB,CAACa,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAD,CAAhB;AACH;AACJ;AACJ;;AAED,iBAAeG,eAAf,CAA+BC,GAA/B,EAAmC;AAC/B;AACA,QAAIJ,KAAK,GAAG,CAAC,GAAGb,aAAJ,CAAZ,CAF+B,CAG/B;;AACAa,IAAAA,KAAK,CAACK,MAAN,CAAaD,GAAb,EAAkB,CAAlB;AACA,QAAIV,IAAI,GAAG,MAAMX,MAAM,CAACY,OAAP,CAAeC,QAAf,CAAwBU,OAAxB,CAAgC,MAAhC,EAAwCL,IAAI,CAACM,SAAL,CAAgBP,KAAhB,CAAxC,CAAjB;AACAZ,IAAAA,gBAAgB,CAACY,KAAD,CAAhB,CAN+B,CAO/B;;AACA,QAAGA,KAAK,CAACQ,MAAN,KAAiB,CAApB,EAAsB;AAClBtB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwB,SAAH,EAAa;AACT;AACA,UAAGF,aAAa,CAACqB,MAAd,KAAyB,CAA5B,EAA8B;AAC1BtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFD,MAEO;AACHA,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;AACJ,GATQ,EASN,CAACC,aAAD,CATM,CAAT;AAWAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwB,SAAH,EAAa,CACT;AACH;AACJ,GAJQ,EAIN,CAACJ,OAAD,CAJM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwB,SAAH,EAAa;AACT;AACA;AACAG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB,CAHS,CAIT;;AACAC,MAAAA,cAAc,GALL,CAMT;;AACAD,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,GAVQ,EAUN,CAACH,SAAD,CAVM,CAAT;AAYAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwB,SAAH,EAAa,CACT;AACA;AACH;AACJ,GALQ,EAKN,CAACE,aAAD,CALM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,IAAI,eAAE,oBAAC,KAAD;AACF,MAAA,KAAK,EAAE,EADL;AAEF,MAAA,GAAG,EAAC,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAMI,IAAA,KAAK,EAAC,+BANV;AAOI,IAAA,QAAQ,EAAC,oDAPb;AAQI,IAAA,KAAK,EAAE;AAAA;AACP;AACI,wBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACNkB,QAAAA,QAAQ,EAAE,SADJ;AAENC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,EADP;AAEHC,UAAAA,UAAU,EAAE,EAFT;AAGHC,UAAAA,YAAY,EAAE,CAAC,YAAD,CAHX;AAIHC,UAAAA,aAAa,EAAE,CAAC,aAAD;AAJZ;AAFD,OAAV;AAQO,MAAA,GAAG,EAAC,GARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,GAAG,EAAC,SAA3B;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATA,CAFG,eAaP,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,eAAT;AAAyB,MAAA,GAAG,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,SAAZ;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAbO,CARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eA+BI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADA,EAIC7B,OAAO,gBACJ,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,CAAC4B,GAAd,CAAkB,CAACC,IAAD,EAAOZ,GAAP,kBACnB,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AACI,IAAA,OAAO,EAAE;AAAA;AACT;AACA,wBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACNK,QAAAA,QAAQ,EAAE,SADJ;AAENC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAEK,IAAI,CAACC,KADZ;AAEHL,UAAAA,UAAU,EAAEI,IAAI,CAACE,IAFd;AAGHL,UAAAA,YAAY,EAAEG,IAAI,CAACG,MAHhB;AAIHL,UAAAA,aAAa,EAAEE,IAAI,CAACI;AAJjB;AAFD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,eAAE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAFS,eAaT,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AAA8C,MAAA,OAAO,EAAE,YAAY,MAAMjB,eAAe,EAAxF;AAA4F,MAAA,KAAK,EAAEC,GAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbS,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAiBA,oBAAC,IAAD;AACI,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACiB,QAAAA,eAAe,EAAE;AAAlB,OAAf;AAA6C,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAgB,QAAA,YAAY,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAGI,IAAA,KAAK,EAAEL,IAAI,CAACC,KAHhB;AAII,IAAA,WAAW,eACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACG,MAAL,CAAYJ,GAAZ,CAAgBC,IAAI,iBACjB,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBA,IAAnB,CADH,CADL,EAIKA,IAAI,CAACI,OAAL,CAAaL,GAAb,CAAiBC,IAAI,iBAClB,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,IAApB,CADH,CAJL,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBA,IAAI,CAACE,IAAvB,CARJ,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,CADA,CADC,CADL,CADI,gBA2CA,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,WAAW,eACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA/CR,CADJ,CA/BJ,CADJ,CADJ;AAoGH,CA7KD;;AA+KA,eAAelC,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tag, Empty, Button, Row, Col, Result, Divider, Card, Avatar, Image } from 'antd';\nimport { DoubleRightOutlined, CompassTwoTone, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport mondaySdk from \"monday-sdk-js\";\n\nconst { Meta } = Card;\n\nconst monday = mondaySdk();\n\nconst OptionSelection = () => {\n\n    const [isSaved, setIsSaved] = useState(false)\n    const [savedSearches, setSavedSearches] = useState([])\n    const [isMounted, setIsMounted] = useState([])\n    const [isDataLoading, setIsDataLoading] = useState(false)\n\n    useEffect(() => {\n        setIsMounted(true)\n    }, [])\n\n    async function loadSavedItems(){\n        let resp = await monday.storage.instance.getItem('boop')\n        if(!resp || !resp.data){\n            return\n        } else {\n            if(resp.data.value !== null){\n                let saved = resp.data.value;\n                setSavedSearches(JSON.parse(saved))\n            }\n        }\n    }\n\n    async function deleteSavedItem(idx){\n        // console.log(e.value)\n        let saved = [...savedSearches]\n        // console.log(idx)\n        saved.splice(idx, 1)\n        let resp = await monday.storage.instance.setItem('boop', JSON.stringify( saved ))\n        setSavedSearches(saved)\n        // console.log(savedSearches)\n        if(saved.length === 0){\n            setIsSaved(false)\n        }\n    }\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(savedSearches)\n            if(savedSearches.length === 0){\n                setIsSaved(false)\n            } else {\n                setIsSaved(true)\n            }\n        }\n    }, [savedSearches])\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(isSaved)\n        }\n    }, [isSaved])\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(savedSearches)\n            // Do nothing\n            setIsDataLoading(true)\n            // Fetch previously saved data\n            loadSavedItems()\n            // console.log(savedSearches)\n            setIsDataLoading(false)\n        }\n    }, [isMounted])\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(savedSearches)\n            // Do nothing\n        }\n    }, [isDataLoading])\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"site-statistic-demo-card\">\n                <Row gutter={16}>\n                    <Col flex=\"auto\">\n                        <Result\n                            icon={<Image\n                                width={10}\n                                src=\"../../logo.png\"\n\n                                />}\n                            title=\"Let's begin with Super Search\"\n                            subTitle=\"or you can choose to run a search from the past...\"\n                            extra={[\n                            // <Link to=\"/search\" key=\"0\">\n                                <Link to={{\n                                    pathname: '/search',\n                                    state: {\n                                        question: \"\",\n                                        searchType: \"\",\n                                        searchGroups: [\"All Groups\"],\n                                        searchColumns: [\"All Columns\"]\n                                    }\n                                    }} key=\"0\">\n                                <Button type=\"primary\" key=\"console\" size=\"large\">Go to Super Search</Button>\n                            </Link>,\n                            <Link to=\"/view/history\" key=\"2\">\n                                <Button key=\"history\" size=\"large\">View Search History</Button>\n                            </Link>,\n                            ]}\n                        />\n                    </Col>\n                </Row>\n                <Row gutter={16} justify=\"center\">\n                    <Col flex=\"auto\">\n                    <Divider orientation=\"left\">\n                        <h3>Saved Searches</h3>\n                    </Divider>\n                    {isSaved ? \n                        <Row gutter={16}>\n                            {savedSearches.map((item, idx) => (\n                            <Col span={6}>\n                            <Card\n                                actions={[\n                                // <PlayCircleTwoTone />,\n                                <Link to={{\n                                    pathname: '/search',\n                                    state: {\n                                        question: item.query,\n                                        searchType: item.type,\n                                        searchGroups: item.groups,\n                                        searchColumns: item.columns\n                                    }\n                                    }}>\n                                    <Button type=\"link\" icon={<DoubleRightOutlined />} />\n                                </Link>,\n                                <Button type=\"link\" icon={<DeleteOutlined />} onClick={async () => await deleteSavedItem()} value={idx} />\n                                ]}\n                            >\n                            <Meta\n                                avatar={<Avatar style={{backgroundColor: \"#eb4034\"}} icon={<CompassTwoTone twoToneColor='#eb4034' />} />}\n                                \n                                title={item.query}\n                                description={\n                                    <div>\n                                        {item.groups.map(item => (\n                                            <Tag color=\"blue\">{item}</Tag>\n                                        ))}\n                                        {item.columns.map(item => (\n                                            <Tag color=\"green\">{item}</Tag>\n                                        ))}\n                                        <br/>\n                                        <Tag color=\"red\">{item.type}</Tag>\n                                    </div>\n                                }\n                                />\n                            </Card>\n                            </Col>\n                            ))}\n                        </Row>\n                        :\n                            <Row gutter={[16, 24]}>\n                                <Col flex=\"auto\">\n                                    <Empty\n                                        description={\n                                        <span>\n                                            Saved searches appear here...\n                                        </span>\n                                        }\n                                    >\n                                    </Empty> \n                                </Col>\n                            </Row>\n                        }\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n\n}\n\nexport default OptionSelection;"]},"metadata":{},"sourceType":"module"}