{"ast":null,"code":"var _jsxFileName = \"/Users/akhand/Developer/power-search/quickstart-react/src/views/SearchView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button, PageHeader, Input, Dropdown, Menu, Row, Col, Empty, Select, Collapse, Table } from 'antd';\nimport { PlayCircleFilled, DownOutlined, LoadingOutlined, SearchOutlined } from '@ant-design/icons';\nimport '@tensorflow/tfjs-backend-webgl';\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nconst {\n  Search\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Panel\n} = Collapse;\n\nconst qna = require(\"@tensorflow-models/qna\");\n\nconst SearchView = () => {\n  const [dataLoading, setDataLoading] = useState(false);\n  const [resultsLoading, setResultsLoading] = useState(false);\n  const [boardGroups, setBoardGroups] = useState([]);\n  const [boardColumns, setBoardColumns] = useState([]);\n  const [allData, setAllData] = useState({});\n  const [allResults, setAllResults] = useState({});\n  const [wiki, setWiki] = useState(\"\");\n  const [isMounted, setIsMounted] = useState(false);\n  const [boardId, setBoardId] = useState(\"\");\n  const [model, setModel] = useState();\n  const [question, setQuestion] = useState(\"\");\n  const [dataSource, setDataSource] = useState([]);\n  const [resultsColumns, setResultsColumns] = useState([]);\n  const backButton = useHistory();\n  const loadingWheel = /*#__PURE__*/React.createElement(LoadingOutlined, {\n    style: {\n      fontSize: 48\n    },\n    spin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  });\n  const groupMenu = /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"select one country\",\n    defaultValue: ['All Groups Selected'] // onChange={handleChange}\n    ,\n    optionLabelProp: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, boardGroups.map(function (group, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: group.id,\n      label: group.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-option-label-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, group.title));\n  }));\n  const columnMenu = /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"select one country\",\n    defaultValue: ['All Groups Selected'] // onChange={handleChange}\n    ,\n    optionLabelProp: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, boardColumns.map(function (column, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: column.id,\n      label: column.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-option-label-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, column.title));\n  }));\n  const typeOfSearchMenu = /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"question\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Ask Anything\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Match Keywords\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"Yiminghe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Regex Search\"));\n\n  function clickBackButton() {\n    backButton.push('/');\n  }\n\n  function getQuestionFromInput(e) {\n    setQuestion(e.target.value);\n  }\n\n  async function runSearch() {\n    // create Wiki based on groups and columns selected\n    console.log(\"Search Button was clicked\");\n    setResultsLoading(true);\n    let answers = await model.findAnswers(question, wiki);\n    setAllResults(answers); // console.log(answers)\n  } // function createWiki(){\n  //     // get data based on groups and columns selected\n  //     // create an index with the beginning and end of the sentences\n  //     // get all the items that correspond to the search parameters\n  // }\n\n\n  useEffect(() => {\n    if (isMounted) {\n      // when results change, update datasource and columns\n      let newDatasource = [];\n      let newResultsColumns = [];\n\n      for (let i = 0; i < allResults.length; i++) {\n        newDatasource.push(allResults[i]);\n        newDatasource[i]['key'] = i;\n      }\n\n      setDataSource(newDatasource);\n\n      if (allResults[0]) {\n        let cols = Object.keys(results[0]);\n\n        for (let j = 0; j <= cols.length; j++) {\n          newResultsColumns.push({\n            title: cols[j],\n            dataIndex: cols[j],\n            key: cols[j]\n          });\n        }\n      }\n\n      setResultsColumns(newResultsColumns);\n      console.log(results);\n      setResultsLoading(false);\n    }\n  }, [allResults]);\n  useEffect(() => {\n    if (isMounted) {\n      console.log(dataSource);\n    }\n  }, [dataSource]);\n  useEffect(() => {\n    if (isMounted) {\n      console.log(resultsColumns);\n    }\n  }, [resultsColumns]);\n  useEffect(() => {\n    // getBoardId()\n    monday.listen(\"context\", getContext);\n    loadModel();\n    setIsMounted(true);\n  }, []);\n  useEffect(() => {\n    if (isMounted) {\n      getBoardGroups();\n      getAllData(); // gets triggered whenever boardId changes\n      // getBoardColumns() //\n      // get other stuff dependent on boardId too!\n    }\n  }, [boardId]);\n  useEffect(() => {\n    if (isMounted) {\n      createWiki();\n    }\n  }, [allData]);\n\n  async function loadModel() {\n    const runModel = await qna.load(); // importing the model\n\n    setModel(runModel);\n  }\n\n  function createWiki() {\n    let corpus = \"\";\n    let items = allData.boards[0].items;\n\n    for (let i = 0; i < items.length; i++) {\n      let item = items[i];\n      let item_name = items[i].name;\n      corpus += \"This is the entry for item \" + item_name + '.';\n\n      for (let j = 0; j < item.column_values.length; j++) {\n        let column = item.column_values[j];\n        let column_type = column.type;\n        let column_text = column.text;\n\n        if (column_type === \"text\") {\n          corpus += column_text;\n        }\n      }\n    }\n\n    setWiki(corpus);\n  }\n\n  useEffect(() => {\n    console.log(wiki);\n  }, [wiki]);\n\n  async function getContext(res) {\n    setBoardId(res.data.boardIds[0]);\n  }\n\n  async function getAllData() {\n    monday.api(`query {boards(ids:[${boardId}]) {items(limit:10000) {id, name, column_values {id, text, type, value, title}}}}`).then(res => {\n      setAllData(res.data);\n      console.log(res.data);\n    });\n  }\n\n  async function getBoardGroups() {\n    monday.api(`query { boards(ids: ${boardId}) { columns { id title } groups { id title }} } `).then(res => {\n      // setAllData(res.data)\n      console.log(res.data);\n      setBoardGroups(res.data.boards[0].groups);\n      setBoardColumns(res.data.boards[0].columns);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    className: \"site-page-header\",\n    onBack: clickBackButton,\n    title: \"Super Search\",\n    subTitle: \"Get answers from your boards!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-statistic-demo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Ask a question!\",\n    size: \"large\",\n    shape: \"round\",\n    suffix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }),\n    value: question,\n    onChange: getQuestionFromInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    shape: \"round\",\n    block: true,\n    onClick: runSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"Search\"))), boardId ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: ['1'],\n    ghost: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Advanced Options\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 45\n    }\n  }, \"Select groups\"), groupMenu), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  }, \"Select columns\"), columnMenu), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 45\n    }\n  }, \"Select type of search\"), typeOfSearchMenu)))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    dataSource: dataSource,\n    columns: resultsColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  })))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 28\n      }\n    }, \"Please select a board to continue...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 26\n    }\n  })))));\n};\n\nexport default SearchView;","map":{"version":3,"sources":["/Users/akhand/Developer/power-search/quickstart-react/src/views/SearchView.js"],"names":["React","useState","useEffect","useHistory","useParams","Button","PageHeader","Input","Dropdown","Menu","Row","Col","Empty","Select","Collapse","Table","PlayCircleFilled","DownOutlined","LoadingOutlined","SearchOutlined","mondaySdk","monday","Search","Option","Panel","qna","require","SearchView","dataLoading","setDataLoading","resultsLoading","setResultsLoading","boardGroups","setBoardGroups","boardColumns","setBoardColumns","allData","setAllData","allResults","setAllResults","wiki","setWiki","isMounted","setIsMounted","boardId","setBoardId","model","setModel","question","setQuestion","dataSource","setDataSource","resultsColumns","setResultsColumns","backButton","loadingWheel","fontSize","groupMenu","width","map","group","index","id","title","columnMenu","column","typeOfSearchMenu","clickBackButton","push","getQuestionFromInput","e","target","value","runSearch","console","log","answers","findAnswers","newDatasource","newResultsColumns","i","length","cols","Object","keys","results","j","dataIndex","key","listen","getContext","loadModel","getBoardGroups","getAllData","createWiki","runModel","load","corpus","items","boards","item","item_name","name","column_values","column_type","type","column_text","text","res","data","boardIds","api","then","groups","columns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button, PageHeader, Input, Dropdown, Menu, Row, Col, Empty, Select, Collapse, Table } from 'antd';\nimport { PlayCircleFilled, DownOutlined, LoadingOutlined, SearchOutlined } from '@ant-design/icons'\nimport '@tensorflow/tfjs-backend-webgl';\nimport mondaySdk from \"monday-sdk-js\";\n\nconst monday = mondaySdk();\nconst { Search } = Input;\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst qna = require(\"@tensorflow-models/qna\")\n\n\nconst SearchView = () => {\n\n    const [dataLoading, setDataLoading] = useState(false)\n    const [resultsLoading, setResultsLoading] = useState(false)\n    const [boardGroups, setBoardGroups] = useState([])\n    const [boardColumns, setBoardColumns] = useState([])\n    const [allData, setAllData] = useState({})\n    const [allResults, setAllResults] = useState({})\n    const [wiki, setWiki] = useState(\"\")\n    const [isMounted, setIsMounted] = useState(false)\n    const [boardId, setBoardId] = useState(\"\")\n    const [model, setModel] = useState()\n    const [question, setQuestion] = useState(\"\")\n    const [dataSource, setDataSource] = useState([])\n    const [resultsColumns, setResultsColumns] = useState([])\n    const backButton = useHistory()\n\n    const loadingWheel = <LoadingOutlined style={{ fontSize: 48 }} spin />;\n    const groupMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={['All Groups Selected']}\n            // onChange={handleChange}\n            optionLabelProp=\"label\"\n        >    \n        {boardGroups.map(function (group, index){\n            return (\n                <Option value={group.id} label={group.title}>\n                    <div className=\"demo-option-label-item\">\n                        {group.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n\n    const columnMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={['All Groups Selected']}\n            // onChange={handleChange}\n            optionLabelProp=\"label\"\n        >    \n        {boardColumns.map(function (column, index){\n            return (\n                <Option value={column.id} label={column.title}>\n                    <div className=\"demo-option-label-item\">\n                        {column.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n      \n    const typeOfSearchMenu = (\n        <Select defaultValue=\"question\" style={{ width: '100%' }}>\n            <Option value=\"question\">Ask Anything</Option>\n            <Option value=\"lucy\">Match Keywords</Option>\n            <Option value=\"Yiminghe\">Regex Search</Option>\n        </Select>\n    )\n\n    function clickBackButton(){\n        backButton.push('/')\n    }\n\n    function getQuestionFromInput(e){\n        setQuestion(e.target.value)\n    }\n\n    async function runSearch(){\n        // create Wiki based on groups and columns selected\n        console.log(\"Search Button was clicked\")\n        setResultsLoading(true)\n        let answers = await model.findAnswers(question, wiki)\n        setAllResults(answers)\n        // console.log(answers)\n    }\n\n    // function createWiki(){\n    //     // get data based on groups and columns selected\n    //     // create an index with the beginning and end of the sentences\n    //     // get all the items that correspond to the search parameters\n\n    // }\n\n    useEffect(() => {\n        if(isMounted){\n            // when results change, update datasource and columns\n            let newDatasource = []\n            let newResultsColumns = []\n            for(let i = 0; i < allResults.length; i++){\n                newDatasource.push(allResults[i]);\n                newDatasource[i]['key'] = i;\n            }\n            setDataSource(newDatasource)\n            if(allResults[0]){\n                let cols = Object.keys(results[0])\n                for(let j = 0; j <= cols.length; j++){\n                    newResultsColumns.push({\n                        title: cols[j],\n                        dataIndex: cols[j],\n                        key: cols[j],\n                    })\n                }\n            }\n            setResultsColumns(newResultsColumns)\n            console.log(results)\n            setResultsLoading(false)\n        }\n    }, [allResults])\n\n    useEffect(() => {\n        if(isMounted){\n            console.log(dataSource)\n        }\n    }, [dataSource])\n\n    useEffect(() => {\n        if(isMounted){\n            console.log(resultsColumns)\n        }\n    }, [resultsColumns])\n\n    useEffect(() => {\n        // getBoardId()\n        monday.listen(\"context\", getContext);\n        loadModel()\n        setIsMounted(true)\n    }, []);\n\n    useEffect(() => {\n        if(isMounted){\n            getBoardGroups()\n            getAllData()\n            // gets triggered whenever boardId changes\n            // getBoardColumns() //\n            // get other stuff dependent on boardId too!\n        }\n\n    }, [boardId])\n\n    useEffect(() => {\n        if(isMounted){\n            createWiki()\n        }\n    }, [allData])\n\n    async function loadModel(){\n        const runModel = await qna.load(); // importing the model\n        setModel(runModel)\n    }\n\n    function createWiki(){\n        let corpus = \"\"\n        let items = allData.boards[0].items\n        for(let i = 0; i < items.length; i++){\n            let item = items[i]\n            let item_name = items[i].name\n            corpus += \"This is the entry for item \" + item_name + '.'\n            for(let j = 0; j < item.column_values.length; j++){\n                let column = item.column_values[j]\n                let column_type = column.type;\n                let column_text = column.text;\n                if(column_type === \"text\"){\n                    corpus += column_text;\n                }\n            }\n        }\n        setWiki(corpus)\n    }\n\n    useEffect(() => {\n        console.log(wiki)\n    }, [wiki])\n\n    async function getContext(res){\n        setBoardId(res.data.boardIds[0])\n    }\n\n    async function getAllData(){\n        monday.api(`query {boards(ids:[${boardId}]) {items(limit:10000) {id, name, column_values {id, text, type, value, title}}}}`)\n        .then((res) => {\n            setAllData(res.data)\n            console.log(res.data)\n        })\n    }\n\n    async function getBoardGroups(){\n        monday.api(`query { boards(ids: ${boardId}) { columns { id title } groups { id title }} } `)\n        .then((res) => {\n            // setAllData(res.data)\n            console.log(res.data)\n            setBoardGroups(res.data.boards[0].groups)\n            setBoardColumns(res.data.boards[0].columns)\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={clickBackButton}\n                title=\"Super Search\"\n                subTitle=\"Get answers from your boards!\"\n            />\n            <div className=\"site-statistic-demo-card\">\n                <Row gutter={[16, 24]}>\n                    <Col flex=\"auto\">\n                    <Input\n                        placeholder=\"Ask a question!\"\n                        size=\"large\"\n                        shape=\"round\"\n                        suffix={\n                            <SearchOutlined className=\"site-form-item-icon\" />\n                        }\n                        value={question}\n                        onChange={getQuestionFromInput}\n                    />\n                    </Col>\n                    <Col span={4}>\n                        <Button type=\"primary\" size=\"large\" shape=\"round\" block onClick={runSearch}>Search</Button>\n                    </Col>\n                </Row>\n                    {boardId ?\n                    <div className=\"container\">\n                     <Row gutter={[16, 24]}>\n                        <Col flex=\"auto\">\n                            <Collapse defaultActiveKey={['1']} ghost>\n                                <Panel header=\"Advanced Options\" key=\"1\">\n                                    <Row gutter={16}>\n                                        <Col span={8}>\n                                            <label>Select groups</label>\n                                            {groupMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select columns</label>\n                                            {columnMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select type of search</label>\n                                            {typeOfSearchMenu}\n                                        </Col>\n                                    </Row>\n                                </Panel>\n                            </Collapse>\n                        </Col>\n                        </Row>\n                        <Row  gutter={[16, 24]}>\n                            <Col flex=\"auto\">\n                                <Table dataSource={dataSource} columns={resultsColumns} />\n                            </Col>\n                        </Row>\n                        </div>\n                         :  \n                         <Row gutter={[16, 24]}>\n\n                         <Col flex=\"auto\">\n                         <Empty\n                         description={\n                           <span>\n                             Please select a board to continue...\n                           </span>\n                         }\n                       >\n                       </Empty> \n                       </Col>\n                       </Row>\n\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default SearchView;"]},"metadata":{},"sourceType":"module"}