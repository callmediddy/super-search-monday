{"ast":null,"code":"var _jsxFileName = \"/Users/akhand/Developer/power-search/quickstart-react/src/views/SearchView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button, PageHeader, Input, Dropdown, Menu, Row, Col, Empty, Select, Collapse, Table, Radio } from 'antd';\nimport { PlayCircleFilled, DownOutlined, LoadingOutlined, SearchOutlined, BorderlessTableOutlined, BookOutlined } from '@ant-design/icons';\nimport '@tensorflow/tfjs-backend-webgl';\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nconst {\n  Search\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Panel\n} = Collapse;\n\nconst qna = require(\"@tensorflow-models/qna\");\n\nconst SearchView = () => {\n  const [dataLoading, setDataLoading] = useState(false);\n  const [resultsLoading, setResultsLoading] = useState(false);\n  const [boardGroups, setBoardGroups] = useState([]);\n  const [boardColumns, setBoardColumns] = useState([]);\n  const [allData, setAllData] = useState({});\n  const [allResults, setAllResults] = useState({});\n  const [wiki, setWiki] = useState(\"\");\n  const [isMounted, setIsMounted] = useState(false);\n  const [boardId, setBoardId] = useState(\"\");\n  const [model, setModel] = useState();\n  const [question, setQuestion] = useState(\"\");\n  const [dataSource, setDataSource] = useState([]);\n  const [resultsColumns, setResultsColumns] = useState([]);\n  const [searchGroups, setSearchGroups] = useState([\"All Groups\"]);\n  const [searchColumns, setSearchColumns] = useState([\"All Columns\"]);\n  const [searchType, setSearchType] = useState(\"question\");\n  const [responseView, setResponseView] = useState(false);\n  const backButton = useHistory();\n  const optionsWithDisabled = [{\n    label: /*#__PURE__*/React.createElement(BookOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }),\n    value: \"raw\"\n  }, {\n    label: /*#__PURE__*/React.createElement(BorderlessTableOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }\n    }),\n    value: 'table'\n  } // { label: 'Orange', value: 'Orange', disabled: true },\n  ];\n  const groupMenu = /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"select one country\",\n    defaultValue: searchGroups,\n    onChange: getSearchGroups,\n    optionLabelProp: \"label\",\n    value: searchGroups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, boardGroups.map(function (group, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: group.id,\n      label: group.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-option-label-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, group.title));\n  }));\n  const columnMenu = /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    style: {\n      width: '100%'\n    },\n    placeholder: \"select one country\",\n    defaultValue: searchColumns,\n    onChange: getSearchColumns,\n    optionLabelProp: \"label\",\n    value: searchColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, boardColumns.map(function (column, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: column.id,\n      label: column.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-option-label-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, column.title));\n  }));\n  const typeOfSearchMenu = /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"question\",\n    style: {\n      width: '100%'\n    },\n    onSelect: value => {\n      console.log(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Ask Anything\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"keywords\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Match Keywords\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"regex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Regex Search\"));\n\n  function getSearchColumns(value) {\n    if (value.length > 1) {\n      if (value[0] === \"All Columns\") {\n        value.splice(0, 1);\n      }\n    }\n\n    if (value.length === 0) {\n      value.push(\"All Columns\");\n    }\n\n    setSearchColumns(value);\n    console.log(value);\n  }\n\n  function getSearchGroups(value) {\n    if (value.length > 1) {\n      if (value[0] === \"All Groups\") {\n        value.splice(0, 1);\n      }\n    }\n\n    if (value.length === 0) {\n      value.push(\"All Groups\");\n    }\n\n    setSearchGroups(value);\n    console.log(value);\n  }\n\n  function clickBackButton() {\n    backButton.push('/');\n  }\n\n  function getQuestionFromInput(e) {\n    setQuestion(e.target.value);\n  }\n\n  async function runSearch() {\n    // create Wiki based on groups and columns selected\n    if (searchType === \"question\") {\n      setResultsLoading(true);\n\n      if (model) {\n        let answers = await model.findAnswers(question, wiki);\n        setAllResults(answers);\n      }\n    } else if (searchType === \"regex\") {\n      setAllResults({\n        text: \"SIR PLS\"\n      });\n    } else {\n      setAllResults({\n        text: \"SUR PLS\"\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (isMounted) {\n      // when results change, update datasource and columns\n      let newDatasource = [];\n      let newResultsColumns = [];\n\n      if (searchType === \"question\") {\n        for (let i = 0; i < allResults.length; i++) {\n          newDatasource.push(allResults[i]);\n          newDatasource[i]['key'] = i;\n        }\n\n        if (allResults[0]) {\n          let cols = Object.keys(allResults[0]);\n\n          for (let j = 0; j <= cols.length; j++) {\n            newResultsColumns.push({\n              title: cols[j],\n              dataIndex: cols[j],\n              key: cols[j]\n            });\n          }\n        }\n      } else if (searchType === \"regex\") {}\n\n      setDataSource(newDatasource);\n      setResultsColumns(newResultsColumns); // console.log(allResults)\n\n      setResultsLoading(false);\n    }\n  }, [allResults]);\n  useEffect(() => {\n    if (isMounted) {\n      console.log(dataSource);\n    }\n  }, [dataSource]);\n  useEffect(() => {\n    if (isMounted) {\n      console.log(resultsColumns);\n    }\n  }, [resultsColumns]);\n  useEffect(() => {\n    // getBoardId()\n    monday.listen(\"context\", getContext);\n    setDataLoading(true);\n    loadModel();\n    setIsMounted(true);\n    setDataLoading(false);\n  }, []);\n  useEffect(() => {\n    if (isMounted) {\n      setDataLoading(true);\n      getBoardGroups();\n      getAllData();\n      setDataLoading(false); // gets triggered whenever boardId changes\n      // getBoardColumns() //\n      // get other stuff dependent on boardId too!\n    }\n  }, [boardId]);\n  useEffect(() => {\n    if (isMounted) {\n      setDataLoading(true);\n      createWiki();\n      setDataLoading(false);\n    }\n  }, [allData]);\n  useEffect(() => {\n    if (isMounted) {// do something here?\n    }\n  }, [responseView]);\n  useEffect(() => {\n    if (isMounted) {\n      setDataLoading(true);\n      createWiki();\n      setDataLoading(false);\n    }\n  }, [searchColumns, searchGroups]);\n\n  async function loadModel() {\n    const runModel = await qna.load(); // importing the model\n\n    setModel(runModel);\n  }\n\n  function createWiki() {\n    let corpus = \"\";\n    let items = allData.boards[0].items; // let searchColumnIds = searchColumns.map( item => { return item.id })\n\n    let setSearchColumnIds = new Set(searchColumns);\n    console.log(searchColumns);\n    console.log(setSearchColumnIds); // let column_ids = set(searchColumns)\n\n    for (let i = 0; i < items.length; i++) {\n      let item = items[i];\n      let item_name = items[i].name;\n      corpus += \"This is the entry for item \" + item_name + '.';\n\n      for (let j = 0; j < item.column_values.length; j++) {\n        let column = item.column_values[j];\n        let column_type = column.type;\n        let column_text = column.text;\n        let column_id = column.id;\n        console.log(column_id);\n\n        if (setSearchColumnIds.has(column_id) || searchColumns[0] === \"All Columns\") {\n          // This is going to change in a bit\n          if (column_type === \"text\") {\n            corpus += column_text;\n          }\n        }\n      }\n    }\n\n    setWiki(corpus);\n  }\n\n  useEffect(() => {\n    console.log(wiki);\n  }, [wiki]);\n\n  async function getContext(res) {\n    setBoardId(res.data.boardIds[0]);\n  }\n\n  async function getAllData() {\n    monday.api(`query {boards(ids:[${boardId}]) {items(limit:10000) {id, name, column_values {id, text, type, value, title}}}}`).then(res => {\n      setAllData(res.data);\n      console.log(res.data);\n    });\n  }\n\n  async function getBoardGroups() {\n    monday.api(`query { boards(ids: ${boardId}) { columns { id title } groups { id title }} } `).then(res => {\n      // setAllData(res.data)\n      console.log(res.data);\n      setBoardGroups(res.data.boards[0].groups);\n      setBoardColumns(res.data.boards[0].columns);\n    });\n  }\n\n  function selectResponseView(e) {\n    console.log(e.target.value);\n\n    if (e.target.value === \"raw\") {\n      setResponseView(false);\n    } else {\n      setResponseView(true);\n    }\n\n    console.log(responseView);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    className: \"site-page-header\",\n    onBack: clickBackButton,\n    title: \"Super Search\",\n    subTitle: \"Get answers from your boards!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-statistic-demo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, dataLoading ? /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    style: {\n      fontSize: 48\n    },\n    spin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Ask a question!\",\n    size: \"large\",\n    shape: \"round\",\n    suffix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }),\n    value: question,\n    onChange: getQuestionFromInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    shape: \"round\",\n    block: true,\n    onClick: runSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Search\"))), boardId ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: ['0'],\n    ghost: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Advanced Options\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 45\n    }\n  }, \"Select groups\"), groupMenu), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 45\n    }\n  }, \"Select columns\"), columnMenu), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 45\n    }\n  }, \"Select type of search\"), typeOfSearchMenu)))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    options: optionsWithDisabled,\n    onChange: selectResponseView,\n    value: responseView,\n    optionType: \"button\",\n    buttonStyle: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, resultsLoading ? responseView ? /*#__PURE__*/React.createElement(Table, {\n    loading: true,\n    dataSource: dataSource,\n    columns: resultsColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 45\n    }\n  }, \"HELLO\") : /*#__PURE__*/React.createElement(Table, {\n    dataSource: dataSource,\n    columns: resultsColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 41\n    }\n  })))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 28\n      }\n    }, \"Please select a board to continue...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 26\n    }\n  })))));\n};\n\nexport default SearchView;","map":{"version":3,"sources":["/Users/akhand/Developer/power-search/quickstart-react/src/views/SearchView.js"],"names":["React","useState","useEffect","useHistory","useParams","Button","PageHeader","Input","Dropdown","Menu","Row","Col","Empty","Select","Collapse","Table","Radio","PlayCircleFilled","DownOutlined","LoadingOutlined","SearchOutlined","BorderlessTableOutlined","BookOutlined","mondaySdk","monday","Search","Option","Panel","qna","require","SearchView","dataLoading","setDataLoading","resultsLoading","setResultsLoading","boardGroups","setBoardGroups","boardColumns","setBoardColumns","allData","setAllData","allResults","setAllResults","wiki","setWiki","isMounted","setIsMounted","boardId","setBoardId","model","setModel","question","setQuestion","dataSource","setDataSource","resultsColumns","setResultsColumns","searchGroups","setSearchGroups","searchColumns","setSearchColumns","searchType","setSearchType","responseView","setResponseView","backButton","optionsWithDisabled","label","value","groupMenu","width","getSearchGroups","map","group","index","id","title","columnMenu","getSearchColumns","column","typeOfSearchMenu","console","log","length","splice","push","clickBackButton","getQuestionFromInput","e","target","runSearch","answers","findAnswers","text","newDatasource","newResultsColumns","i","cols","Object","keys","j","dataIndex","key","listen","getContext","loadModel","getBoardGroups","getAllData","createWiki","runModel","load","corpus","items","boards","setSearchColumnIds","Set","item","item_name","name","column_values","column_type","type","column_text","column_id","has","res","data","boardIds","api","then","groups","columns","selectResponseView","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button, PageHeader, Input, Dropdown, Menu, Row, Col, Empty, Select, Collapse, Table, Radio } from 'antd';\nimport { PlayCircleFilled, DownOutlined, LoadingOutlined, SearchOutlined, BorderlessTableOutlined, BookOutlined } from '@ant-design/icons'\nimport '@tensorflow/tfjs-backend-webgl';\nimport mondaySdk from \"monday-sdk-js\";\n\nconst monday = mondaySdk();\nconst { Search } = Input;\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst qna = require(\"@tensorflow-models/qna\")\n\n\nconst SearchView = () => {\n\n    const [dataLoading, setDataLoading] = useState(false)\n    const [resultsLoading, setResultsLoading] = useState(false)\n    const [boardGroups, setBoardGroups] = useState([])\n    const [boardColumns, setBoardColumns] = useState([])\n    const [allData, setAllData] = useState({})\n    const [allResults, setAllResults] = useState({})\n    const [wiki, setWiki] = useState(\"\")\n    const [isMounted, setIsMounted] = useState(false)\n    const [boardId, setBoardId] = useState(\"\")\n    const [model, setModel] = useState()\n    const [question, setQuestion] = useState(\"\")\n    const [dataSource, setDataSource] = useState([])\n    const [resultsColumns, setResultsColumns] = useState([])\n    const [searchGroups, setSearchGroups] = useState([\"All Groups\"])\n    const [searchColumns, setSearchColumns] = useState([\"All Columns\"])\n    const [searchType, setSearchType] = useState(\"question\")\n    const [responseView, setResponseView] = useState(false)\n    const backButton = useHistory()\n\n    const optionsWithDisabled = [\n        { label: <BookOutlined />, value: \"raw\" },\n        { label: <BorderlessTableOutlined />, value: 'table' },\n        // { label: 'Orange', value: 'Orange', disabled: true },\n    ];\n\n    const groupMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={searchGroups}\n            onChange={getSearchGroups}\n            optionLabelProp=\"label\"\n            value={searchGroups}\n        >    \n        {boardGroups.map(function (group, index){\n            return (\n                <Option value={group.id} label={group.title}>\n                    <div className=\"demo-option-label-item\">\n                        {group.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n\n    const columnMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={searchColumns}\n            onChange={getSearchColumns}\n            optionLabelProp=\"label\"\n            value={searchColumns}\n        >    \n        {boardColumns.map(function (column, index){\n            return (\n                <Option value={column.id} label={column.title}>\n                    <div className=\"demo-option-label-item\">\n                        {column.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n      \n    const typeOfSearchMenu = (\n        <Select defaultValue=\"question\" style={{ width: '100%' }} onSelect={(value) => {console.log(value)}} >\n            <Option value=\"question\">Ask Anything</Option>\n            <Option value=\"keywords\">Match Keywords</Option>\n            <Option value=\"regex\">Regex Search</Option>\n        </Select>\n    )\n\n    function getSearchColumns(value){\n        if(value.length > 1){\n            if(value[0] === \"All Columns\"){\n                value.splice(0, 1)\n            }\n        }\n        if(value.length === 0){\n            value.push(\"All Columns\")\n        }\n        setSearchColumns(value)\n        console.log(value)\n    }\n\n    function getSearchGroups(value){\n        if(value.length > 1){\n            if(value[0] === \"All Groups\"){\n                value.splice(0, 1)\n            }\n        }\n        if(value.length === 0){\n            value.push(\"All Groups\")\n        }\n        setSearchGroups(value)\n        console.log(value)\n    }\n\n    function clickBackButton(){\n        backButton.push('/')\n    }\n\n    function getQuestionFromInput(e){\n        setQuestion(e.target.value)\n    }\n\n    async function runSearch(){\n        // create Wiki based on groups and columns selected\n\n        if(searchType === \"question\"){\n            setResultsLoading(true)\n            if(model){\n                let answers = await model.findAnswers(question, wiki)\n                setAllResults(answers)\n            } \n        } else if(searchType === \"regex\"){\n            setAllResults({text: \"SIR PLS\"})\n        } else {\n            setAllResults({text: \"SUR PLS\"})\n        }\n    }\n\n    useEffect(() => {\n        if(isMounted){\n            // when results change, update datasource and columns\n            let newDatasource = []\n            let newResultsColumns = []\n            if(searchType === \"question\"){\n                for(let i = 0; i < allResults.length; i++){\n                    newDatasource.push(allResults[i]);\n                    newDatasource[i]['key'] = i;\n                }\n                if(allResults[0]){\n                    let cols = Object.keys(allResults[0])\n                    for(let j = 0; j <= cols.length; j++){\n                        newResultsColumns.push({\n                            title: cols[j],\n                            dataIndex: cols[j],\n                            key: cols[j],\n                        })\n                    }\n                }\n            } else if(searchType === \"regex\"){\n                \n            }\n\n            setDataSource(newDatasource)\n            setResultsColumns(newResultsColumns)\n            // console.log(allResults)\n            setResultsLoading(false)\n        }\n    }, [allResults])\n\n    useEffect(() => {\n        if(isMounted){\n            console.log(dataSource)\n        }\n    }, [dataSource])\n\n    useEffect(() => {\n        if(isMounted){\n            console.log(resultsColumns)\n        }\n    }, [resultsColumns])\n\n    useEffect(() => {\n        // getBoardId()\n        monday.listen(\"context\", getContext);\n        setDataLoading(true)\n        loadModel()\n        setIsMounted(true)\n        setDataLoading(false)\n    }, []);\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            getBoardGroups()\n            getAllData()\n            setDataLoading(false)\n            // gets triggered whenever boardId changes\n            // getBoardColumns() //\n            // get other stuff dependent on boardId too!\n        }\n\n    }, [boardId])\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            createWiki()\n            setDataLoading(false)\n        }\n    }, [allData])\n\n    useEffect(() => {\n        if(isMounted){\n            // do something here?\n        }\n    }, [responseView])\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            createWiki()\n            setDataLoading(false)\n        }\n    }, [searchColumns, searchGroups])\n\n    async function loadModel(){\n        const runModel = await qna.load(); // importing the model\n        setModel(runModel)\n    }\n\n    function createWiki(){\n        let corpus = \"\"\n        let items = allData.boards[0].items\n        // let searchColumnIds = searchColumns.map( item => { return item.id })\n        let setSearchColumnIds = new Set(searchColumns)\n        console.log(searchColumns)\n        console.log(setSearchColumnIds)\n        // let column_ids = set(searchColumns)\n        for(let i = 0; i < items.length; i++){\n            let item = items[i]\n            let item_name = items[i].name\n            corpus += \"This is the entry for item \" + item_name + '.'\n            for(let j = 0; j < item.column_values.length; j++){\n                let column = item.column_values[j]\n                let column_type = column.type;\n                let column_text = column.text;\n                let column_id = column.id;\n                console.log(column_id)\n                if(setSearchColumnIds.has(column_id) || searchColumns[0] === \"All Columns\"){\n                    // This is going to change in a bit\n                    if(column_type === \"text\"){\n                        corpus += column_text;\n                    }\n                }\n            }\n        }\n        setWiki(corpus)\n    }\n\n    useEffect(() => {\n        console.log(wiki)\n    }, [wiki])\n\n    async function getContext(res){\n        setBoardId(res.data.boardIds[0])\n    }\n\n    async function getAllData(){\n        monday.api(`query {boards(ids:[${boardId}]) {items(limit:10000) {id, name, column_values {id, text, type, value, title}}}}`)\n        .then((res) => {\n            setAllData(res.data)\n            console.log(res.data)\n        })\n    }\n\n    async function getBoardGroups(){\n        monday.api(`query { boards(ids: ${boardId}) { columns { id title } groups { id title }} } `)\n        .then((res) => {\n            // setAllData(res.data)\n            console.log(res.data)\n            setBoardGroups(res.data.boards[0].groups)\n            setBoardColumns(res.data.boards[0].columns)\n        })\n    }\n\n    function selectResponseView(e){\n        console.log(e.target.value)\n        if(e.target.value === \"raw\"){\n            setResponseView(false)\n        } else {\n            setResponseView(true)\n        }\n        console.log(responseView)\n    }\n\n    return (\n        <div className=\"container\">\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={clickBackButton}\n                title=\"Super Search\"\n                subTitle=\"Get answers from your boards!\"\n            />\n            <div className=\"site-statistic-demo-card\">\n                { dataLoading ?      \n                    <Row gutter={[16, 24]}  justify=\"center\">\n                    <LoadingOutlined style={{ fontSize: 48 }} spin />\n                    </Row> \n                    :\n                    <Row gutter={[16, 24]}>\n                        <Col flex=\"auto\">\n                        <Input\n                            placeholder=\"Ask a question!\"\n                            size=\"large\"\n                            shape=\"round\"\n                            suffix={\n                                <SearchOutlined className=\"site-form-item-icon\" />\n                            }\n                            value={question}\n                            onChange={getQuestionFromInput}\n                        />\n                        </Col>\n                        <Col span={4}>\n                            <Button type=\"primary\" size=\"large\" shape=\"round\" block onClick={runSearch}>Search</Button>\n                        </Col>\n                    </Row>\n                }\n                    {boardId ?\n                    <div className=\"container\">\n                     <Row gutter={[16, 24]}>\n                        <Col flex=\"auto\">\n                            <Collapse defaultActiveKey={['0']} ghost>\n                                <Panel header=\"Advanced Options\" key=\"1\">\n                                    <Row gutter={16}>\n                                        <Col span={8}>\n                                            <label>Select groups</label>\n                                            {groupMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select columns</label>\n                                            {columnMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select type of search</label>\n                                            {typeOfSearchMenu}\n                                        </Col>\n                                    </Row>\n                                </Panel>\n                            </Collapse>\n                        </Col>\n                        </Row>\n                        <Row gutter={ [16, 24]}>\n                            <Col flex=\"auto\">\n                                <Radio.Group\n                                    options={optionsWithDisabled}\n                                    onChange={selectResponseView}\n                                    value={responseView}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <Col flex=\"auto\">\n                                {\n                                    resultsLoading ? \n                                        responseView ?\n                                            <Table loading dataSource={dataSource} columns={resultsColumns} />\n                                        :\n                                            <p>HELLO</p>\n                                    : \n                                        <Table dataSource={dataSource} columns={resultsColumns} />\n                                }\n                                \n                            </Col>\n                        </Row>\n                        </div>\n                         :  \n                         <Row gutter={[16, 24]}>\n\n                         <Col flex=\"auto\">\n                         <Empty\n                         description={\n                           <span>\n                             Please select a board to continue...\n                           </span>\n                         }\n                       >\n                       </Empty> \n                       </Col>\n                       </Row>\n\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default SearchView;"]},"metadata":{},"sourceType":"module"}