{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akhand/Developer/power-search/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akhand/Developer/power-search/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/akhand/Developer/power-search/quickstart-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useHistory}from\"react-router-dom\";import{Button,PageHeader,Tooltip,AutoComplete,Row,Col,Empty,Select,Collapse,Table,Radio}from'antd';import{LoadingOutlined,SearchOutlined,BorderlessTableOutlined,BookOutlined}from'@ant-design/icons';import'@tensorflow/tfjs-backend-webgl';import mondaySdk from\"monday-sdk-js\";import Fuse from'fuse.js';var monday=mondaySdk();var Option=Select.Option;var Panel=Collapse.Panel;var qna=require(\"@tensorflow-models/qna\");var SearchView=function SearchView(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dataLoading=_useState2[0],setDataLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),resultsLoading=_useState4[0],setResultsLoading=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),boardGroups=_useState6[0],setBoardGroups=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),boardColumns=_useState8[0],setBoardColumns=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),allData=_useState10[0],setAllData=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),allResults=_useState12[0],setAllResults=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),wiki=_useState14[0],setWiki=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isMounted=_useState16[0],setIsMounted=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),boardId=_useState18[0],setBoardId=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),model=_useState20[0],setModel=_useState20[1];var _useState21=useState(props.location.state.question?props.location.state.question:\"\"),_useState22=_slicedToArray(_useState21,2),question=_useState22[0],setQuestion=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),dataSource=_useState24[0],setDataSource=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),resultsColumns=_useState26[0],setResultsColumns=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),tableDataSource=_useState28[0],setTableDataSource=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),tableDataColumns=_useState30[0],setTableDataColumns=_useState30[1];var _useState31=useState(props.location.state.groups?props.location.state.groups:[\"All Groups\"]),_useState32=_slicedToArray(_useState31,2),searchGroups=_useState32[0],setSearchGroups=_useState32[1];var _useState33=useState(props.location.state.columns?props.location.state.columns:[\"All Columns\"]),_useState34=_slicedToArray(_useState33,2),searchColumns=_useState34[0],setSearchColumns=_useState34[1];var _useState35=useState(props.location.state.searchType?props.location.state.searchType:\"question\"),_useState36=_slicedToArray(_useState35,2),searchType=_useState36[0],setSearchType=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),responseView=_useState38[0],setResponseView=_useState38[1];var _useState39=useState({}),_useState40=_slicedToArray(_useState39,2),itemIdToCorpusIdx=_useState40[0],setItemIdToCorpusIdx=_useState40[1];var _useState41=useState({}),_useState42=_slicedToArray(_useState41,2),itemAllResults=_useState42[0],setItemAllResults=_useState42[1];var _useState43=useState([]),_useState44=_slicedToArray(_useState43,2),getQAutoComplete=_useState44[0],setGetQAutoComplete=_useState44[1];var _useState45=useState([]),_useState46=_slicedToArray(_useState45,2),searchHistory=_useState46[0],setSearchHistory=_useState46[1];var backButton=useHistory();var optionsWithDisabled=[{label:/*#__PURE__*/React.createElement(BookOutlined,null),value:false},{label:/*#__PURE__*/React.createElement(BorderlessTableOutlined,null),value:true}];var handleSearch=function handleSearch(value){var res=searchHistory;if(!value){res.slice(0,5);}else{res=res.filter(function(str){return str.match(value);});}setGetQAutoComplete(res);};var groupMenu=/*#__PURE__*/React.createElement(Select,{mode:\"multiple\",style:{width:'100%'},placeholder:\"select one country\",defaultValue:searchGroups,onChange:getSearchGroups,optionLabelProp:\"label\",value:searchGroups},boardGroups.map(function(group,index){return/*#__PURE__*/React.createElement(Option,{value:group.id,label:group.title,key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"demo-option-label-item\"},group.title));}));var fuseOptionsWithExact={// isCaseSensitive: false,\n// includeScore: false,\n// shouldSort: true,\nincludeMatches:true,// findAllMatches: false,\n// minMatchCharLength: 1,\n// location: 0,\n// threshold: 0.6,\n// distance: 100,\n// useExtendedSearch: false,\n// ignoreLocation: false,\n// ignoreFieldNorm: false,\nkeys:[\"name\",\"column_values.text\"]};var fuseOptionsWithFuzzy={// isCaseSensitive: false,\n// includeScore: false,\n// shouldSort: true,\nincludeMatches:true,// findAllMatches: false,\n// minMatchCharLength: 1,\n// location: 0,\n// threshold: 0.6,\n// distance: 100,\n// useExtendedSearch: false,\n// ignoreLocation: false,\n// ignoreFieldNorm: false,\nkeys:[\"name\",\"column_values.text\"]};var columnMenu=/*#__PURE__*/React.createElement(Select,{mode:\"multiple\",style:{width:'100%'},placeholder:\"select one country\",defaultValue:searchColumns,onChange:getSearchColumns,optionLabelProp:\"label\",value:searchColumns},boardColumns.map(function(column,index){return/*#__PURE__*/React.createElement(Option,{value:column.id,label:column.title,key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"demo-option-label-item\"},column.title));}));var typeOfSearchMenu=/*#__PURE__*/React.createElement(Select,{defaultValue:\"question\",style:{width:'100%'},onSelect:function onSelect(value){setSearchType(value);}},/*#__PURE__*/React.createElement(Option,{value:\"question\"},\"Ask Anything\"),/*#__PURE__*/React.createElement(Option,{value:\"fuzzy\"},\"Fuzzy Search\"),/*#__PURE__*/React.createElement(Option,{value:\"keywords\"},\"Match Keywords\"));function getSearchColumns(value){if(value.length>1){if(value[0]===\"All Columns\"){value.splice(0,1);}}if(value.length===0){value.push(\"All Columns\");}setSearchColumns(value);// console.log(value)\n}function getSearchGroups(value){if(value.length>1){if(value[0]===\"All Groups\"){value.splice(0,1);}}if(value.length===0){value.push(\"All Groups\");}setSearchGroups(value);// console.log(value)\n}function clickBackButton(){backButton.push('/');}function getQuestionFromInput(value){setQuestion(value);}function openItemModal(_x){return _openItemModal.apply(this,arguments);}function _openItemModal(){_openItemModal=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// monday.execute\n// console.log(\"was clicked bahah\", id)\nmonday.execute('openItemCard',{itemId:item.key});case 1:case\"end\":return _context.stop();}}},_callee);}));return _openItemModal.apply(this,arguments);}function runSearch(){return _runSearch.apply(this,arguments);}function _runSearch(){_runSearch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var history,finalHistory,resp,answers,fuse,_answers,answerDataSource,i,answerColumns;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:history=new Set(searchHistory);history.add(question);finalHistory=Array.from(history);setSearchHistory(finalHistory);_context3.next=6;return monday.storage.instance.setItem('mop',JSON.stringify(finalHistory));case 6:resp=_context3.sent;if(!(searchType===\"question\")){_context3.next=17;break;}setResultsLoading(true);if(!model){_context3.next=15;break;}_context3.next=12;return model.findAnswers(question,wiki);case 12:answers=_context3.sent;setAllResults(answers);if(answers.length===0){monday.execute(\"notice\",{message:\"No results were found...\",confirmButton:\"Ask Teammates\",cancelButton:\"Dismiss\",excludeCancelButton:false,type:\"error\",// or \"error\" (red), or \"info\" (blue)\ntimeout:10000}).then(function(res){if(res.confirm===true){console.log(\"Send notification to users\");// let users = \n// monday.api(`\n//     mutation {\n//         create_notification(\n//             text: \"I've got a notification for you!\" + ${question},\n//             user_id: ${user_id},\n//             target_id: ${item_id},\n//             target_type: Project,\n//             internal: true\n//         ) { \n//             id \n//         }\n//     }\n// `);\n}});}else{monday.execute(\"notice\",{message:\"There were \"+answers.length+\" results found!\",type:\"success\",// or \"error\" (red), or \"info\" (blue)\ntimeout:10000});}case 15:_context3.next=25;break;case 17:fuse=searchType===\"fuzzy\"?new Fuse(allData.boards[0].items,fuseOptionsWithFuzzy):new Fuse(allData.boards[0].items,fuseOptionsWithExact);_answers=fuse.search(question);answerDataSource=[];for(i=0;i<_answers.length;i++){answerDataSource.push({key:_answers[i].item.id,'name':_answers[i].item.name});}answerColumns=[{title:'Item Name',dataIndex:'name',key:'name',render:function render(name,id){return/*#__PURE__*/React.createElement(Button,{type:\"link\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return openItemModal(id);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}))},name);}}];setTableDataSource(answerDataSource);setTableDataColumns(answerColumns);if(_answers.length===0){monday.execute(\"notice\",{message:\"No results were found...\",type:\"error\",// or \"error\" (red), or \"info\" (blue)\ntimeout:10000});}else{monday.execute(\"notice\",{message:\"There were \"+_answers.length+\" results found!\",type:\"success\",// or \"error\" (red), or \"info\" (blue)\ntimeout:10000});}case 25:case\"end\":return _context3.stop();}}},_callee3);}));return _runSearch.apply(this,arguments);}useEffect(function(){if(isMounted){(function(){// when results change, update datasource and columns\nvar newDatasource=[];var newResultsColumns=[];var itemIdsToFetch=new Set();var itemIdxMap=itemIdToCorpusIdx;// this is the map\n// for()\n// console.log(allResults)\nif(searchType===\"question\"){var _loop=function _loop(i){newDatasource.push({'Results':allResults[i].text});Object.keys(itemIdxMap).forEach(function(key){var actualKey=key.split(\",\");var keyStartIndex=parseInt(actualKey[0]);var keyEndIndex=parseInt(actualKey[1]);if(allResults[i].startIndex>=keyStartIndex&&allResults[i].endIndex<=keyEndIndex){itemIdsToFetch.add(parseInt(itemIdxMap[key]));}});// newDatasource[i]['key'] = i;\n// if(allResults[i].start)\n};for(var i=0;i<allResults.length;i++){_loop(i);}if(allResults[0]){// let cols = Object.keys(allResults[0])\nnewResultsColumns.push({title:\"Results\",dataIndex:\"Results\",key:\"Results\"});// for(let j = 0; j <= cols.length; j++){\n//     newResultsColumns.push({\n//         title: cols[j],\n//         dataIndex: cols[j],\n//         key: cols[j],\n//     })\n// }\n}}else if(searchType===\"fuzzy\"){}setDataSource(newDatasource);setResultsColumns(newResultsColumns);setResultsLoading(false);// console.log(\"IDs that are going to be fetched are: \", itemIdsToFetch)\nfetchFinalItems(itemIdsToFetch);})();}},[allResults]);function fetchFinalItems(_x2){return _fetchFinalItems.apply(this,arguments);}function _fetchFinalItems(){_fetchFinalItems=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(itemIdsToFetch){var arrayItemIdsToFetch;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:arrayItemIdsToFetch=Array.from(itemIdsToFetch);monday.api(\"query {items(ids:[\".concat(arrayItemIdsToFetch,\"], limit:10000) {id, name}}\")).then(function(res){if(res.data){if(res.data.items.length>0){var answers=res.data.items;// console.log(answers)\nvar answerDataSource=[];for(var i=0;i<answers.length;i++){answerDataSource.push({key:answers[i].id,'name':answers[i].name});}var answerColumns=[{title:'Item Name',dataIndex:'name',key:'name',render:function render(name,id){return/*#__PURE__*/React.createElement(Button,{type:\"link\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return openItemModal(id);case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}))},name);}}];setTableDataSource(answerDataSource);setTableDataColumns(answerColumns);}}});case 2:case\"end\":return _context5.stop();}}},_callee5);}));return _fetchFinalItems.apply(this,arguments);}useEffect(function(){if(isMounted){// console.log(dataSource)\n}},[dataSource]);useEffect(function(){if(isMounted){// console.log(dataSource)\n}},[tableDataSource,tableDataColumns]);useEffect(function(){if(isMounted){// console.log(resultsColumns)\n}},[resultsColumns]);useEffect(function(){// getBoardId()\nif(props.location){// console.log(\"This is the question\", props.location.state.question)\n}monday.listen(\"context\",getContext);setDataLoading(true);loadModel();loadSearchHistory();setIsMounted(true);setDataLoading(false);},[]);useEffect(function(){if(isMounted){setDataLoading(true);getBoardGroups();getAllData();setDataLoading(false);// gets triggered whenever boardId changes\n// getBoardColumns() //\n// get other stuff dependent on boardId too!\n}},[boardId]);useEffect(function(){if(isMounted){setDataLoading(true);createWiki();setDataLoading(false);// console.log(\"all board data: \", allData)\n}},[allData]);useEffect(function(){// do nothing\n},[dataLoading]);useEffect(function(){if(isMounted){// add something here?\n}},[itemIdToCorpusIdx]);useEffect(function(){if(isMounted){// add something here?\n// console.log(searchHistory)\n}},[searchHistory]);useEffect(function(){if(isMounted){// do something here?\n}},[responseView]);useEffect(function(){if(isMounted){// do something here?\n}},[searchType]);useEffect(function(){if(isMounted){setDataLoading(true);createWiki();setDataLoading(false);}},[searchColumns,searchGroups]);function loadModel(){return _loadModel.apply(this,arguments);}function _loadModel(){_loadModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var runModel;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return qna.load();case 2:runModel=_context6.sent;// importing the model\nsetModel(runModel);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return _loadModel.apply(this,arguments);}function loadSearchHistory(){return _loadSearchHistory.apply(this,arguments);}function _loadSearchHistory(){_loadSearchHistory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var resp,history;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return monday.storage.instance.getItem('mop');case 2:resp=_context7.sent;if(!(!resp||!resp.data)){_context7.next=7;break;}return _context7.abrupt(\"return\");case 7:if(resp.data.value!==null){history=resp.data.value;setSearchHistory(JSON.parse(history));}case 8:case\"end\":return _context7.stop();}}},_callee7);}));return _loadSearchHistory.apply(this,arguments);}function saveSearch(){return _saveSearch.apply(this,arguments);}function _saveSearch(){_saveSearch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var resp,savedItems,postResp,_postResp;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return monday.storage.instance.getItem('boop');case 2:resp=_context8.sent;savedItems=[];if(!(!resp||!resp.data)){_context8.next=7;break;}_context8.next=19;break;case 7:if(!(resp.data.value!==null)){_context8.next=15;break;}savedItems=JSON.parse(resp.data.value);savedItems.push(getParamsForSave());_context8.next=12;return monday.storage.instance.setItem('boop',JSON.stringify(savedItems));case 12:postResp=_context8.sent;_context8.next=19;break;case 15:savedItems.push(getParamsForSave());_context8.next=18;return monday.storage.instance.setItem('boop',JSON.stringify(savedItems));case 18:_postResp=_context8.sent;case 19:case\"end\":return _context8.stop();}}},_callee8);}));return _saveSearch.apply(this,arguments);}function getParamsForSave(){var params={'query':question,'groups':searchGroups,'columns':searchColumns,'type':searchType};return params;}function createWiki(){return _createWiki.apply(this,arguments);}function _createWiki(){_createWiki=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var corpus,items,setSearchColumnIds,setSearchGroupIds,itemIdMap,startIndex,endIndex,i,item,item_name,item_id,j,column,column_type,column_text,column_id;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:corpus=\"\";items=allData.boards[0].items;// let searchColumnIds = searchColumns.map( item => { return item.id })\nsetSearchColumnIds=new Set(searchColumns);setSearchGroupIds=new Set(searchGroups);itemIdMap={};// console.log(searchColumns)\n// console.log(setSearchColumnIds)\n// let column_ids = set(searchColumns)\nstartIndex=0;endIndex=0;for(i=0;i<items.length;i++){item=items[i];if(setSearchGroupIds.has(item.group.id)||searchGroups[0]===\"All Groups\"){item_name=items[i].name;item_id=items[i].id;// itemIdMap[item_id] = corpus.length\n// console.log(itemIdMap)\nstartIndex=corpus.length;corpus+=\"This is the entry for item \"+item_name+'.';for(j=0;j<item.column_values.length;j++){column=item.column_values[j];column_type=column.type;column_text=column.text;column_id=column.id;// console.log(column_id)\nif(setSearchColumnIds.has(column_id)||searchColumns[0]===\"All Columns\"){// This is going to change in a bit\nif(column_type===\"text\"){corpus+=column_text;}if(column_type===\"date\"){corpus+=\". \"+item_name+\" is due on \"+column_text+\".\";}if(column_type===\"multiple-person\"){corpus+=\". \"+item_name+\" is assigned to \"+column_text+\".\";}if(column_id===\"status\"){corpus+=\". \"+item_name+\" task item is \"+column_text+\".\";}}}endIndex=corpus.length-1;itemIdMap[[startIndex,endIndex]]=item_id;}}setWiki(corpus);setItemIdToCorpusIdx(itemIdMap);case 10:case\"end\":return _context9.stop();}}},_callee9);}));return _createWiki.apply(this,arguments);}useEffect(function(){if(isMounted){// do nothing\nconsole.log(wiki);}},[wiki]);function getContext(_x3){return _getContext.apply(this,arguments);}function _getContext(){_getContext=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(res){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:setBoardId(res.data.boardIds[0]);case 1:case\"end\":return _context10.stop();}}},_callee10);}));return _getContext.apply(this,arguments);}function getAllData(){return _getAllData.apply(this,arguments);}function _getAllData(){_getAllData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:monday.api(\"query {boards(ids:[\".concat(boardId,\"]) {items(limit:10000) {id, name, group {id}, column_values {id, text, type, value, title}}}}\")).then(function(res){setAllData(res.data);// console.log(res.data)\n});case 1:case\"end\":return _context11.stop();}}},_callee11);}));return _getAllData.apply(this,arguments);}function getBoardGroups(){return _getBoardGroups.apply(this,arguments);}function _getBoardGroups(){_getBoardGroups=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:monday.api(\"query { boards(ids: \".concat(boardId,\") { columns { id title } groups { id title }} } \")).then(function(res){setBoardGroups(res.data.boards[0].groups);setBoardColumns(res.data.boards[0].columns);});case 1:case\"end\":return _context12.stop();}}},_callee12);}));return _getBoardGroups.apply(this,arguments);}function selectResponseView(e){if(e.target.value===false){setResponseView(false);}else{setResponseView(true);}}return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(PageHeader,{className:\"site-page-header\",onBack:clickBackButton,title:\"Super Search\",subTitle:\"Get answers from your boards!\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"site-statistic-demo-card\"},dataLoading?/*#__PURE__*/React.createElement(Row,{gutter:[16,24],justify:\"center\"},/*#__PURE__*/React.createElement(LoadingOutlined,{style:{fontSize:48},spin:true})):/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{flex:\"auto\"},/*#__PURE__*/React.createElement(AutoComplete,{style:{width:\"100%\",height:\"5em\"},onSearch:handleSearch,placeholder:\"Search for a question, keyword or pattern\",shape:\"round\",size:\"large\",suffix:/*#__PURE__*/React.createElement(SearchOutlined,{className:\"site-form-item-icon\"}),value:question,onChange:getQuestionFromInput},getQAutoComplete.map(function(email){return/*#__PURE__*/React.createElement(Option,{key:email,value:email},email);}))),/*#__PURE__*/React.createElement(Col,{span:4},/*#__PURE__*/React.createElement(Button,{type:\"primary\",size:\"large\",shape:\"round\",block:true,onClick:runSearch},\"Search\"))),boardId?/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{flex:\"auto\"},/*#__PURE__*/React.createElement(Collapse,{defaultActiveKey:['0'],ghost:true},/*#__PURE__*/React.createElement(Panel,{header:\"Advanced Options\",key:\"1\"},/*#__PURE__*/React.createElement(Row,{gutter:16},/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(\"label\",null,\"Select groups\"),groupMenu),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(\"label\",null,\"Select columns\"),columnMenu),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(\"label\",null,\"Select type of search\"),typeOfSearchMenu)))))),/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{flex:\"auto\"},/*#__PURE__*/React.createElement(Radio.Group,{options:optionsWithDisabled,onChange:selectResponseView,value:responseView,optionType:\"button\",buttonStyle:\"solid\"})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Tooltip,{placement:\"topLeft\",title:\"Click to save search parameters\"},/*#__PURE__*/React.createElement(Button,{onClick:saveSearch},\"Save Search\")))),/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{flex:\"auto\"},resultsLoading?/*#__PURE__*/React.createElement(Table,{loading:true,dataSource:dataSource,columns:resultsColumns}):responseView?/*#__PURE__*/React.createElement(Table,{dataSource:dataSource,columns:resultsColumns}):/*#__PURE__*/React.createElement(Table,{dataSource:tableDataSource,columns:tableDataColumns})))):/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{flex:\"auto\"},/*#__PURE__*/React.createElement(Empty,{description:/*#__PURE__*/React.createElement(\"span\",null,\"Please select a board to continue...\")})))));};export default SearchView;","map":{"version":3,"sources":["/Users/akhand/Developer/power-search/quickstart-react/src/views/SearchView.js"],"names":["React","useState","useEffect","useHistory","Button","PageHeader","Tooltip","AutoComplete","Row","Col","Empty","Select","Collapse","Table","Radio","LoadingOutlined","SearchOutlined","BorderlessTableOutlined","BookOutlined","mondaySdk","Fuse","monday","Option","Panel","qna","require","SearchView","props","dataLoading","setDataLoading","resultsLoading","setResultsLoading","boardGroups","setBoardGroups","boardColumns","setBoardColumns","allData","setAllData","allResults","setAllResults","wiki","setWiki","isMounted","setIsMounted","boardId","setBoardId","model","setModel","location","state","question","setQuestion","dataSource","setDataSource","resultsColumns","setResultsColumns","tableDataSource","setTableDataSource","tableDataColumns","setTableDataColumns","groups","searchGroups","setSearchGroups","columns","searchColumns","setSearchColumns","searchType","setSearchType","responseView","setResponseView","itemIdToCorpusIdx","setItemIdToCorpusIdx","itemAllResults","setItemAllResults","getQAutoComplete","setGetQAutoComplete","searchHistory","setSearchHistory","backButton","optionsWithDisabled","label","value","handleSearch","res","slice","filter","str","match","groupMenu","width","getSearchGroups","map","group","index","id","title","fuseOptionsWithExact","includeMatches","keys","fuseOptionsWithFuzzy","columnMenu","getSearchColumns","column","typeOfSearchMenu","length","splice","push","clickBackButton","getQuestionFromInput","openItemModal","item","execute","itemId","key","runSearch","history","Set","add","finalHistory","Array","from","storage","instance","setItem","JSON","stringify","resp","findAnswers","answers","message","confirmButton","cancelButton","excludeCancelButton","type","timeout","then","confirm","console","log","fuse","boards","items","search","answerDataSource","i","name","answerColumns","dataIndex","render","newDatasource","newResultsColumns","itemIdsToFetch","itemIdxMap","text","Object","forEach","actualKey","split","keyStartIndex","parseInt","keyEndIndex","startIndex","endIndex","fetchFinalItems","arrayItemIdsToFetch","api","data","listen","getContext","loadModel","loadSearchHistory","getBoardGroups","getAllData","createWiki","load","runModel","getItem","parse","saveSearch","savedItems","getParamsForSave","postResp","params","corpus","setSearchColumnIds","setSearchGroupIds","itemIdMap","has","item_name","item_id","j","column_values","column_type","column_text","column_id","boardIds","selectResponseView","e","target","fontSize","height","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, PageHeader, Tooltip, AutoComplete, Row, Col, Empty, Select, Collapse, Table, Radio } from 'antd';\nimport { LoadingOutlined, SearchOutlined, BorderlessTableOutlined, BookOutlined } from '@ant-design/icons'\nimport '@tensorflow/tfjs-backend-webgl';\nimport mondaySdk from \"monday-sdk-js\";\nimport Fuse from 'fuse.js'\n\nconst monday = mondaySdk();\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst qna = require(\"@tensorflow-models/qna\")\n\n\nconst SearchView = (props) => {\n\n    const [dataLoading, setDataLoading] = useState(false)\n    const [resultsLoading, setResultsLoading] = useState(false)\n    const [boardGroups, setBoardGroups] = useState([])\n    const [boardColumns, setBoardColumns] = useState([])\n    const [allData, setAllData] = useState({})\n    const [allResults, setAllResults] = useState({})\n    const [wiki, setWiki] = useState(\"\")\n    const [isMounted, setIsMounted] = useState(false)\n    const [boardId, setBoardId] = useState(\"\")\n    const [model, setModel] = useState()\n    const [question, setQuestion] = useState(props.location.state.question ? props.location.state.question : \"\")\n    const [dataSource, setDataSource] = useState([])\n    const [resultsColumns, setResultsColumns] = useState([])\n    const [tableDataSource, setTableDataSource] = useState([])\n    const [tableDataColumns, setTableDataColumns] = useState([])\n    const [searchGroups, setSearchGroups] = useState(props.location.state.groups ? props.location.state.groups : [\"All Groups\"])\n    const [searchColumns, setSearchColumns] = useState(props.location.state.columns ? props.location.state.columns : [\"All Columns\"])\n    const [searchType, setSearchType] = useState(props.location.state.searchType ? props.location.state.searchType : \"question\")\n    const [responseView, setResponseView] = useState(false)\n    const [itemIdToCorpusIdx, setItemIdToCorpusIdx] = useState({})\n    const [itemAllResults, setItemAllResults] = useState({})\n    const [getQAutoComplete, setGetQAutoComplete] = useState([]);\n    const [searchHistory, setSearchHistory] = useState([])\n\n    const backButton = useHistory()\n\n    const optionsWithDisabled = [\n        { label: <BookOutlined />, value: false },\n        { label: <BorderlessTableOutlined />, value: true },\n    ];\n\n\n  const handleSearch = (value) => {\n    let res = searchHistory;\n\n    if (!value) {\n      res.slice(0, 5)\n    } else {\n        res = res.filter(str => str.match(value));\n    }\n\n    setGetQAutoComplete(res);\n  };\n\n    const groupMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={searchGroups}\n            onChange={getSearchGroups}\n            optionLabelProp=\"label\"\n            value={searchGroups}\n        >    \n        {boardGroups.map(function (group, index){\n            return (\n                <Option value={group.id} label={group.title} key={index}>\n                    <div className=\"demo-option-label-item\">\n                        {group.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n\n    const fuseOptionsWithExact = {\n        // isCaseSensitive: false,\n        // includeScore: false,\n        // shouldSort: true,\n        includeMatches: true,\n        // findAllMatches: false,\n        // minMatchCharLength: 1,\n        // location: 0,\n        // threshold: 0.6,\n        // distance: 100,\n        // useExtendedSearch: false,\n        // ignoreLocation: false,\n        // ignoreFieldNorm: false,\n        keys: [\n          \"name\",\n          \"column_values.text\"\n        ]\n      };\n\n      const fuseOptionsWithFuzzy = {\n        // isCaseSensitive: false,\n        // includeScore: false,\n        // shouldSort: true,\n        includeMatches: true,\n        // findAllMatches: false,\n        // minMatchCharLength: 1,\n        // location: 0,\n        // threshold: 0.6,\n        // distance: 100,\n        // useExtendedSearch: false,\n        // ignoreLocation: false,\n        // ignoreFieldNorm: false,\n        keys: [\n          \"name\",\n          \"column_values.text\"\n        ]\n      };\n      \n\n    const columnMenu = (\n        <Select\n            mode=\"multiple\"\n            style={{ width: '100%' }}\n            placeholder=\"select one country\"\n            defaultValue={searchColumns}\n            onChange={getSearchColumns}\n            optionLabelProp=\"label\"\n            value={searchColumns}\n        >    \n        {boardColumns.map(function (column, index){\n            return (\n                <Option value={column.id} label={column.title} key={index}>\n                    <div className=\"demo-option-label-item\">\n                        {column.title}\n                    </div>\n                </Option>\n            )\n        })}\n        </Select>\n    );\n      \n    const typeOfSearchMenu = (\n        <Select defaultValue=\"question\" style={{ width: '100%' }} onSelect={(value) => {setSearchType(value)}} >\n            <Option value=\"question\">Ask Anything</Option>\n            <Option value=\"fuzzy\">Fuzzy Search</Option>\n            <Option value=\"keywords\">Match Keywords</Option>\n        </Select>\n    )\n\n    function getSearchColumns(value){\n        if(value.length > 1){\n            if(value[0] === \"All Columns\"){\n                value.splice(0, 1)\n            }\n        }\n        if(value.length === 0){\n            value.push(\"All Columns\")\n        }\n        setSearchColumns(value)\n        // console.log(value)\n    }\n\n    function getSearchGroups(value){\n        if(value.length > 1){\n            if(value[0] === \"All Groups\"){\n                value.splice(0, 1)\n            }\n        }\n        if(value.length === 0){\n            value.push(\"All Groups\")\n        }\n        setSearchGroups(value)\n        // console.log(value)\n    }\n\n    function clickBackButton(){\n        backButton.push('/')\n    }\n\n    function getQuestionFromInput(value){\n\n        setQuestion(value)\n    }\n\n    async function openItemModal(item){\n        // monday.execute\n        // console.log(\"was clicked bahah\", id)\n        monday.execute('openItemCard', { itemId: item.key });\n    }\n\n    async function runSearch(){\n        let history = new Set(searchHistory)\n        history.add(question)\n        let finalHistory = Array.from(history)\n        setSearchHistory(finalHistory)\n        let resp = await monday.storage.instance.setItem('mop', JSON.stringify(finalHistory))\n\n\n        if(searchType === \"question\"){\n            setResultsLoading(true)\n            if(model){\n                let answers = await model.findAnswers(question, wiki)\n                setAllResults(answers)\n                if(answers.length === 0){\n                    monday.execute(\"notice\", { \n                        message: \"No results were found...\",\n                        confirmButton: \"Ask Teammates\",\n                        cancelButton: \"Dismiss\",\n                        excludeCancelButton: false,\n                        type: \"error\", // or \"error\" (red), or \"info\" (blue)\n                        timeout: 10000,\n                     }).then((res) => {\n                         if(res.confirm === true){\n                             console.log(\"Send notification to users\")\n                            // let users = \n                            // monday.api(`\n                            //     mutation {\n                            //         create_notification(\n                            //             text: \"I've got a notification for you!\" + ${question},\n                            //             user_id: ${user_id},\n                            //             target_id: ${item_id},\n                            //             target_type: Project,\n                            //             internal: true\n                            //         ) { \n                            //             id \n                            //         }\n                            //     }\n                            // `);\n                         }\n                     })\n                } else {\n                    monday.execute(\"notice\", { \n                        message: \"There were \" + answers.length + \" results found!\",\n                        type: \"success\", // or \"error\" (red), or \"info\" (blue)\n                        timeout: 10000,\n                     });\n                }\n            }\n        } else {\n\n            const fuse = (searchType === \"fuzzy\") ? new Fuse(allData.boards[0].items, fuseOptionsWithFuzzy) : new Fuse(allData.boards[0].items, fuseOptionsWithExact);\n            const answers = fuse.search(question)\n            let answerDataSource = []\n\n                for(let i = 0; i < answers.length; i++){\n                    answerDataSource.push({\n                        key: answers[i].item.id,\n                        'name': answers[i].item.name\n                    })\n                }  \n\n                let answerColumns = [\n                    {\n                        title: 'Item Name',\n                        dataIndex: 'name',\n                        key: 'name',\n                        render: (name, id) => <Button type=\"link\" onClick={async() => await openItemModal(id) }>{name}</Button>\n                    },\n                ]\n                setTableDataSource(answerDataSource)\n                setTableDataColumns(answerColumns)\n                \n                if(answers.length === 0){\n                    monday.execute(\"notice\", { \n                        message: \"No results were found...\",\n                        type: \"error\", // or \"error\" (red), or \"info\" (blue)\n                        timeout: 10000,\n                     });\n                } else {\n                    monday.execute(\"notice\", { \n                        message: \"There were \" + answers.length + \" results found!\",\n                        type: \"success\", // or \"error\" (red), or \"info\" (blue)\n                        timeout: 10000,\n                    });\n                }\n            }\n        }\n\n    useEffect(() => {\n        if(isMounted){\n            // when results change, update datasource and columns\n            let newDatasource = []\n            let newResultsColumns = []\n            let itemIdsToFetch = new Set()\n            let itemIdxMap = itemIdToCorpusIdx // this is the map\n            // for()\n            // console.log(allResults)\n            if(searchType === \"question\"){\n                for(let i = 0; i < allResults.length; i++){\n                    newDatasource.push({'Results': allResults[i].text});\n\n                    Object.keys(itemIdxMap).forEach(function(key) {\n                        \n                        let actualKey = key.split(\",\")\n                        let keyStartIndex = parseInt(actualKey[0])\n                        let keyEndIndex = parseInt( actualKey[1])\n\n                        if(allResults[i].startIndex >= keyStartIndex && allResults[i].endIndex <= keyEndIndex){\n                            itemIdsToFetch.add(parseInt(itemIdxMap[key]))\n                        }\n                        \n                    });\n                    // newDatasource[i]['key'] = i;\n                    // if(allResults[i].start)\n                }\n                if(allResults[0]){\n                    // let cols = Object.keys(allResults[0])\n                    newResultsColumns.push({\n                        title: \"Results\",\n                        dataIndex: \"Results\",\n                        key: \"Results\"\n                    })\n                    // for(let j = 0; j <= cols.length; j++){\n                    //     newResultsColumns.push({\n                    //         title: cols[j],\n                    //         dataIndex: cols[j],\n                    //         key: cols[j],\n                    //     })\n                    // }\n                }\n            } else if(searchType === \"fuzzy\"){\n                \n            }\n            setDataSource(newDatasource)\n            setResultsColumns(newResultsColumns)\n            setResultsLoading(false)\n            // console.log(\"IDs that are going to be fetched are: \", itemIdsToFetch)\n            fetchFinalItems(itemIdsToFetch)\n        }\n    }, [allResults])\n\n\n    async function fetchFinalItems(itemIdsToFetch){\n        let arrayItemIdsToFetch = Array.from(itemIdsToFetch)\n        monday.api(`query {items(ids:[${arrayItemIdsToFetch}], limit:10000) {id, name}}`)\n        .then((res) => {\n            if(res.data){\n                if(res.data.items.length > 0){\n                    let answers = res.data.items\n                    // console.log(answers)\n                    let answerDataSource = []\n\n                    for(let i = 0; i < answers.length; i++){\n                        answerDataSource.push({\n                            key: answers[i].id,\n                            'name': answers[i].name\n                        })\n                    }  \n    \n                    let answerColumns = [\n                        {\n                            title: 'Item Name',\n                            dataIndex: 'name',\n                            key: 'name',\n                            render: (name, id) => <Button type=\"link\" onClick={async() => await openItemModal(id) }>{name}</Button>\n                        },\n                    ]\n                    setTableDataSource(answerDataSource)\n                    setTableDataColumns(answerColumns)\n                }\n            }\n        })\n    }\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(dataSource)\n        }\n    }, [dataSource])\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(dataSource)\n        }\n    }, [tableDataSource, tableDataColumns])\n\n\n    useEffect(() => {\n        if(isMounted){\n            // console.log(resultsColumns)\n        }\n    }, [resultsColumns])\n\n    useEffect(() => {\n        // getBoardId()\n        if(props.location){\n            // console.log(\"This is the question\", props.location.state.question)\n        }\n        monday.listen(\"context\", getContext);\n        setDataLoading(true)\n        loadModel()\n        loadSearchHistory()\n        setIsMounted(true)\n        setDataLoading(false)\n    }, []);\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            getBoardGroups()\n            getAllData()\n            setDataLoading(false)\n            // gets triggered whenever boardId changes\n            // getBoardColumns() //\n            // get other stuff dependent on boardId too!\n        }\n\n    }, [boardId])\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            createWiki()\n            setDataLoading(false)\n            // console.log(\"all board data: \", allData)\n        }\n    }, [allData])\n\n    useEffect(() => {\n        // do nothing\n    }, [dataLoading])\n\n    useEffect(() => {\n        if(isMounted){\n            // add something here?\n        }\n    }, [itemIdToCorpusIdx])\n\n    useEffect(() => {\n        if(isMounted){\n            // add something here?\n            // console.log(searchHistory)\n        }\n    }, [searchHistory])\n\n    useEffect(() => {\n        if(isMounted){\n            // do something here?\n        }\n    }, [responseView])\n\n    useEffect(() => {\n        if(isMounted){\n            // do something here?\n        }\n    }, [searchType])\n\n    useEffect(() => {\n        if(isMounted){\n            setDataLoading(true)\n            createWiki()\n            setDataLoading(false)\n        }\n    }, [searchColumns, searchGroups])\n\n    async function loadModel(){\n        const runModel = await qna.load(); // importing the model\n        setModel(runModel)\n    }\n\n    async function loadSearchHistory(){\n        let resp = await monday.storage.instance.getItem('mop')\n        if(!resp || !resp.data){\n            return\n        } else {\n            if(resp.data.value !== null){\n                let history = resp.data.value;\n                setSearchHistory(JSON.parse(history))\n            }\n        }\n        // console.log(history)\n        // setSearchHistory(history)\n    }\n\n    async function saveSearch(){\n        let resp = await monday.storage.instance.getItem('boop')\n        let savedItems = []\n        if(!resp || !resp.data){\n            // create a new object\n            // do nothing\n            // return\n        } else {\n            if(resp.data.value !== null){\n                savedItems = JSON.parse(resp.data.value);\n                savedItems.push(getParamsForSave())\n                let postResp = await monday.storage.instance.setItem('boop', JSON.stringify(savedItems))\n            } else {\n                savedItems.push(getParamsForSave())\n                let postResp = await monday.storage.instance.setItem('boop', JSON.stringify(savedItems))\n            }\n        }\n        // console.log(savedItems)\n    }\n\n    function getParamsForSave(){\n        let params = {'query': question, 'groups': searchGroups, 'columns': searchColumns, 'type': searchType}\n        return params;\n    }\n\n    async function createWiki(){\n        let corpus = \"\"\n        let items = allData.boards[0].items\n        // let searchColumnIds = searchColumns.map( item => { return item.id })\n        let setSearchColumnIds = new Set(searchColumns)\n        let setSearchGroupIds = new Set(searchGroups)\n        let itemIdMap = {}\n        // console.log(searchColumns)\n        // console.log(setSearchColumnIds)\n        // let column_ids = set(searchColumns)\n        let startIndex = 0\n        let endIndex = 0\n        for(let i = 0; i < items.length; i++){\n            let item = items[i]\n            if(setSearchGroupIds.has(item.group.id) || searchGroups[0] === \"All Groups\"){\n                let item_name = items[i].name\n                let item_id = items[i].id\n                // itemIdMap[item_id] = corpus.length\n                // console.log(itemIdMap)\n                startIndex = corpus.length\n                corpus += \"This is the entry for item \" + item_name + '.'\n                for(let j = 0; j < item.column_values.length; j++){\n                    let column = item.column_values[j]\n                    let column_type = column.type;\n                    let column_text = column.text;\n                    let column_id = column.id;\n                    // console.log(column_id)\n                    if(setSearchColumnIds.has(column_id) || searchColumns[0] === \"All Columns\"){\n                        // This is going to change in a bit\n                        if(column_type === \"text\"){\n                            corpus += column_text;\n                        }\n                        if(column_type === \"date\"){\n                            corpus += \". \" + item_name + \" is due on \" + column_text + \".\"\n                        }\n                        if(column_type === \"multiple-person\"){\n                            corpus +=  \". \" + item_name + \" is assigned to \" + column_text + \".\"\n                        }\n                        if(column_id === \"status\"){\n                            corpus +=  \". \" + item_name + \" task item is \" + column_text + \".\"\n                        }\n                    }\n                }\n                endIndex = corpus.length - 1\n                itemIdMap[[startIndex, endIndex]] = item_id\n            }\n\n        }\n        setWiki(corpus)\n        setItemIdToCorpusIdx(itemIdMap)\n    }\n\n    useEffect(() => {\n        if(isMounted){\n            // do nothing\n                    console.log(wiki)\n\n        }\n    }, [wiki])\n\n    async function getContext(res){\n        setBoardId(res.data.boardIds[0])\n    }\n\n    async function getAllData(){\n        monday.api(`query {boards(ids:[${boardId}]) {items(limit:10000) {id, name, group {id}, column_values {id, text, type, value, title}}}}`)\n        .then((res) => {\n            setAllData(res.data)\n            // console.log(res.data)\n        })\n    }\n\n    async function getBoardGroups(){\n        monday.api(`query { boards(ids: ${boardId}) { columns { id title } groups { id title }} } `)\n        .then((res) => {\n            setBoardGroups(res.data.boards[0].groups)\n            setBoardColumns(res.data.boards[0].columns)\n        })\n    }\n\n    function selectResponseView(e){\n        if(e.target.value === false){\n            setResponseView(false)\n        } else {\n            setResponseView(true)\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={clickBackButton}\n                title=\"Super Search\"\n                subTitle=\"Get answers from your boards!\"\n            />\n            <div className=\"site-statistic-demo-card\">\n                { dataLoading ?      \n                    <Row gutter={[16, 24]}  justify=\"center\">\n                        <LoadingOutlined style={{ fontSize: 48 }} spin />\n                    </Row> \n                    :\n                    <Row gutter={[16, 24]}>\n                        <Col flex=\"auto\">\n                            <AutoComplete\n                                style={{\n                                    width: \"100%\",\n                                    height: \"5em\"\n                                }}\n                                onSearch={handleSearch}\n                                placeholder=\"Search for a question, keyword or pattern\"\n                                shape=\"round\"\n                                size=\"large\"\n                                suffix={\n                                    <SearchOutlined className=\"site-form-item-icon\" />\n                                }\n                                value={question}\n                                onChange={getQuestionFromInput}\n                                >\n                                {getQAutoComplete.map((email) => (\n                                    <Option key={email} value={email}>\n                                    {email}\n                                    </Option>\n                                ))}\n                                </AutoComplete>\n                        </Col>\n                        <Col span={4}>\n                            <Button type=\"primary\" size=\"large\" shape=\"round\" block onClick={runSearch}>Search</Button>\n                        </Col>\n                    </Row>\n                }\n                    {boardId ?\n                    <div className=\"container\">\n                     <Row gutter={[16, 24]}>\n                        <Col flex=\"auto\">\n                            <Collapse defaultActiveKey={['0']} ghost>\n                                <Panel header=\"Advanced Options\" key=\"1\">\n                                    <Row gutter={16}>\n                                        <Col span={8}>\n                                            <label>Select groups</label>\n                                            {groupMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select columns</label>\n                                            {columnMenu}\n                                        </Col>\n                                        <Col span={8}>\n                                            <label>Select type of search</label>\n                                            {typeOfSearchMenu}\n                                        </Col>\n                                    </Row>\n                                </Panel>\n                            </Collapse>\n                        </Col>\n                        </Row>\n                        <Row gutter={ [16, 24]}>\n                            <Col flex=\"auto\">\n                                <Radio.Group\n                                    options={optionsWithDisabled}\n                                    onChange={selectResponseView}\n                                    value={responseView}\n                                    optionType=\"button\"\n                                    buttonStyle=\"solid\"\n                                />\n                            </Col>\n                            <Col>\n                            <Tooltip placement=\"topLeft\" title=\"Click to save search parameters\">\n                                <Button onClick={saveSearch}>Save Search</Button>\n                            </Tooltip>\n                            </Col>\n                        </Row>\n                        <Row gutter={[16, 24]}>\n                            <Col flex=\"auto\">\n                                {\n                                    resultsLoading ?                                     \n                                        <Table loading dataSource={dataSource} columns={resultsColumns} />\n                                    : \n                                        responseView ?\n                                            <Table dataSource={dataSource} columns={resultsColumns} />\n                                        :\n                                            <Table dataSource={tableDataSource} columns={tableDataColumns} />\n                                    }\n                                \n                            </Col>\n                        </Row>\n                        </div>\n                         :  \n                         <Row gutter={[16, 24]}>\n\n                         <Col flex=\"auto\">\n                         <Empty\n                         description={\n                           <span>\n                             Please select a board to continue...\n                           </span>\n                         }\n                       >\n                       </Empty> \n                       </Col>\n                       </Row>\n\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default SearchView;"]},"metadata":{},"sourceType":"module"}